https://www.geeksforgeeks.org/problems/number-of-distinct-islands/1
void dfs(int row, int col, vector<vector<int>>& grid, vector<vector<int>>&vis,
   vector<pair<int,int>>&vec, int delrow[], int delcol[], int row0, int col0, int n, int m){
      vis[row][col]=1;
      vec.push_back({row-row0,col-col0});
      for(int i=0;i<4;i++){
        int nrow=row+delrow[i];
        int ncol=col+delcol[i];
        if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && grid[nrow][ncol]==1 && vis[nrow][ncol]==0){
            dfs(nrow,ncol,grid,vis,vec,delrow,delcol,row0,col0,n,m);
        }
      }
  }
int countDistinctIslands(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        //to store identical elements
        set<vector<pair<int,int>>>st;
        int delrow[]={-1,0,1,0};
        int delcol[]={0,1,0,-1};
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!vis[i][j] && grid[i][j]==1){
                    vector<pair<int,int>>vec;
                    dfs(i,j,grid,vis,vec,delrow,delcol,i,j,n,m);
                    st.insert(vec);
                }
            }
        }
        return st.size();
    }

TC - N*M*LOG(N*M) + N*M*4 = N*M
SC - N*M
