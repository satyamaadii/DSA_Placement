https://www.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1
1 BFS 
bool isCyclicBFS(int src,unordered_map<int,bool>&visited,vector<int> adj[]){
    unordered_map<int,int>parent;
    parent[src]=-1;
    visited[src]=1;
    queue<int>q;
    q.push(src);
    while(!q.empty()){
        int front=q.front();
        q.pop();
        for(auto neighbour:adj[front]){
            if(visited[neighbour]==true && neighbour!=parent[front]){
                return true;
            }
            else if(!visited[neighbour]){
                q.push(neighbour);
                visited[neighbour]=1;
                parent[neighbour]=front;
            }
        }
    }
  return false;
}

bool isCycle(int v, vector<int> adj[]) {
     unordered_map<int,bool>visited;
     for(int i=0;i<v;i++){
         if(!visited[i]){
             if(isCyclicBFS(i,visited,adj)) return true;
         }
     }
    return false;
}

2 DFS
bool dfs(vector<int>adj[],vector<int>vis,int start,int parent){
        vis[start]=1;
        for(auto node: adj[start]){
            if(!vis[node]){
                if(dfs(adj,vis,node,start)) return true;
            }
            else if(node!=parent){
                return true;
            }
        }
        return false;
}
bool isCycle(int v, vector<int> adj[]) {
        vector<int>vis(v,0);
        for(int i=0;i<v;i++){
            if(!vis[i]){
                if(dfs(adj,vis,i,-1)) return true;
            }
        }
        return false;
}

TC - O(V+2E) + O(V)
SC - O(V) + O(V)
