MULTI SOURCE Shortest path algorithm, helps to detect Negative cycles as well 
find the shortest distances between every pair of vertices in a given edge-weighted directed graph, go via every node/vertex and find the shortest path
It is a brute force algo where all combination of paths have been tried to get the shortest path, simple brute force on all the paths

How to detect negative cycle? if(cost[i][j] < 0) negative cycle exists
if no negative edges, then can apply Individual Dijkatra on every nodes, TC - (V ELOGV)
void shortest_distance(vector<vector<int>>&matrix){
	    int n=matrix.size();
	    for(int i=0;i<n;i++){
	        for(int j=0;j<n;j++){
	            if(matrix[i][j]==-1)   matrix[i][j]=1e9;
	            if(i==j)  matrix[i][j]=0;
	        }
	    }
	    
	    for(int k=0;k<n;k++){
	        for(int i=0;i<n;i++){
	            for(int j=0;j<n;j++){
	               if(matrix[i][k]!=1e9 && matrix[k][j]!=1e9) matrix[i][j]=min(matrix[i][j],matrix[i][k]+matrix[k][j]);
	            }
	        }
	    }
	    for(int i=0;i<n;i++){
	        for(int j=0;j<n;j++){
	            if(matrix[i][j]==1e9)   matrix[i][j]=-1;
	        }
	    }
	}
TC - O(V^3)
SC - O(1)
