https://www.geeksforgeeks.org/problems/flood-fill-algorithm1856/1

void dfs(vector<vector<int>>&image,vector<vector<int>>&ans,int r,int c,int &n, int &m,int del[],int &iniColor,int &newColor){
         ans[r][c]=newColor;
         for(int i=0;i<4;i++){
             int nr=r+del[i];
             int nc=c+del[i+1];
             if(nr>=0 && nr<n &&nc>=0 && nc<m && ans[nr][nc]!=newColor && image[nr][nc]==iniColor){
                 dfs(image,ans,nr,nc,n,m,del,iniColor,newColor);
             }
         }
    }
vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        int iniColor=image[sr][sc];
        int n=image.size(), m=image[0].size();
        vector<vector<int>>ans=image;
        int del[5]={0,1,0,-1,0};
        dfs(image,ans,sr,sc,n,m,del,iniColor,newColor);          
        return ans;
    }

TC - O(N*M) + O(N*M*4) = O(N*M) [loop + 4 directionally for each node]
SC - O(N*M) + O(N*M) = O(N*M)  [ans vector + recursive stack space] 
